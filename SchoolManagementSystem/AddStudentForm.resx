<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bf8fJ0DV1evMul4AAAAASUVORK5CYII=
</value>
  </data>
</root>